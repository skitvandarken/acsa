name: üöÄ Build & Deploy Angular App
on:
  push:
    branches:
      - mvp  # üåø Trigger on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # üîç Get full git history for debugging

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' # ‚öôÔ∏è Version compatible with Angular
          cache: 'npm'       # üîÑ Cache node_modules for faster builds

      - name: üîç Debug - Show Environment
        run: |
          echo "üìÖ Date: $(date)"
          echo "üè† Home: $HOME"
          echo "üìÇ PWD: $(pwd)"
          echo "üêç Node: $(node -v)"
          echo "üì¶ npm: $(npm -v)"
          echo "üîç ls -la:"
          ls -la

      - name: üìå Install Dependencies
        run: npm ci
        env:
          NODE_ENV: development  # üîß Install all devDependencies

      - name: üîç Debug - Show Installed Packages
        run: npm list --depth=0

      - name: üèóÔ∏è Build Angular App
        run: npm run build -- --configuration production
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"  # üêò Increase memory for large apps

      - name: üîç Debug - Show Build Output
        run: |
          echo "üìÇ Build directory contents:"
          ls -la dist/part/browser
          echo "üìÑ Size of built assets:"
          du -sh dist/part/browser/*

      - name: üöÄ Deploy via WebDAV
        env:
          WEBDISK_USERNAME: ${{ secrets.WEBDISK_USERNAME }}
          WEBDISK_PASSWORD: ${{ secrets.WEBDISK_PASSWORD }}
        run: |
          BUILD_DIR="dist/part/browser"
          WEBDISK_URL="https://angolacables.co.ao:2078"
          
          # üìã List of protected files and folders
          EXCLUDE_LIST=(
            "cgi-bin"
            ".well-known"
            ".tmb"
            "partners.angolacables.co.ao"
            "old_angolacables.co.ao"
            "angular.angolacables.co.ao"
            "old2_angolacables.co.ao"
            "site_update"
            ".user.ini"
            ".htaccess_bak"
            "old_angolacables.co.ao.zip"
          )
          
          echo "üõ°Ô∏è Protected items:"
          printf " - üõ°Ô∏è %s\n" "${EXCLUDE_LIST[@]}"
          
          # üîê Test WebDAV connection first
          echo "üîê Testing WebDAV connection..."
          if ! curl -u $WEBDISK_USERNAME:$WEBDISK_PASSWORD -X PROPFIND $WEBDISK_URL/ --silent --show-error --fail >/dev/null; then
            echo "‚ùå FATAL: WebDAV authentication failed!"
            echo "‚ÑπÔ∏è Check your WEBDISK_USERNAME and WEBDISK_PASSWORD secrets"
            exit 1
          fi
          echo "‚úÖ WebDAV connection successful!"
          
          echo "üîç Finding files to upload..."
          find $BUILD_DIR -type f | while read -r file; do
            RELATIVE_PATH="${file#"$BUILD_DIR/"}"
            
            # üö´ Check if file should be excluded
            exclude=false
            for item in "${EXCLUDE_LIST[@]}"; do
              if [[ "$RELATIVE_PATH" == "$item"* ]]; then
                echo "‚è≠Ô∏è Skipping protected: $RELATIVE_PATH (matches $item)"
                exclude=true
                break
              fi
            done
            
            if [ "$exclude" = false ]; then
              REMOTE_PATH="${WEBDISK_URL}/${RELATIVE_PATH}"
              echo "‚¨ÜÔ∏è Uploading: $RELATIVE_PATH"
              
              # Create directory structure if needed
              REMOTE_DIR=$(dirname "$REMOTE_PATH")
              if ! curl -u $WEBDISK_USERNAME:$WEBDISK_PASSWORD -X MKCOL "$REMOTE_DIR" --silent --show-error --fail >/dev/null 2>&1; then
                echo "‚ö†Ô∏è Directory creation failed (might already exist)"
              fi
              
              # Upload with retry logic
              MAX_RETRIES=3
              RETRY_DELAY=5
              attempt=1
              while [ $attempt -le $MAX_RETRIES ]; do
                if curl -u $WEBDISK_USERNAME:$WEBDISK_PASSWORD -T "$file" "$REMOTE_PATH" --silent --show-error --fail; then
                  echo "‚úÖ Upload succeeded (attempt $attempt)"
                  break
                else
                  echo "‚ö†Ô∏è Upload attempt $attempt failed for $RELATIVE_PATH"
                  if [ $attempt -eq $MAX_RETRIES ]; then
                    echo "‚ùå Max retries reached for $RELATIVE_PATH"
                    exit 1
                  fi
                  sleep $RETRY_DELAY
                  ((attempt++))
                fi
              done
            fi
          done
          
          echo "‚úÖ Deployment complete! All non-protected files uploaded."

      - name: üìù Final Status
        run: |
          echo "üéâ Deployment workflow completed successfully!"
          echo "üïí $(date)"
          echo "üåê https://angolacables.co.ao should be updated"
